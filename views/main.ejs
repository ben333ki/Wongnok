<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>home</title>
    <link rel="stylesheet" href="/css/home.css">
</head>
<body>
    <%- include('./partials/header.ejs') %>
    <div class="body">
        <%- include('./partials/bodyimg.ejs') %>
        <%- include('./partials/menu-favpage.ejs') %>
        <div id="search-results"><%- include('./partials/containpost.ejs') %></div>
    </div>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            setupCarousel(
                ".containtypefoodmenu-wrapper",
                ".containtypefoodmenu",
                ".left-arrowtypefood",
                ".right-arrowtypefood"
            );

            setupCarousel(
                ".containtypefollowmenu-wrapper",
                ".containfollowmenu",
                ".left-arrowfollow",
                ".right-arrowfollow"
            );

            function setupCarousel(wrapperSelector, containerSelector, leftArrowSelector, rightArrowSelector) {
                const containerWrapper = document.querySelector(wrapperSelector);
                const container = document.querySelector(containerSelector);
                const leftArrow = document.querySelector(leftArrowSelector);
                const rightArrow = document.querySelector(rightArrowSelector);

                const itemWidth = container.querySelector("div").offsetWidth + 35; // ความกว้างของไอเท็ม + ช่วงห่าง
                let scrollPosition = 0;

                rightArrow.addEventListener("click", () => {
                    const maxScroll = container.scrollWidth - containerWrapper.clientWidth;
                    if (scrollPosition < maxScroll) {
                        scrollPosition = Math.min(scrollPosition + itemWidth, maxScroll);
                        container.style.transform = `translateX(-${scrollPosition}px)`;
                    }
                });

                leftArrow.addEventListener("click", () => {
                    if (scrollPosition > 0) {
                        scrollPosition = Math.max(scrollPosition - itemWidth, 0);
                        container.style.transform = `translateX(-${scrollPosition}px)`;
                    }
                });
            }
        });


    // ฟังก์ชันค้นหาข้อมูล (สามารถปรับใช้ตามความเหมาะสม)



    document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.querySelector('.search-bar');
    const searchForm = document.querySelector('#search-form');
    const searchResultsContainer = document.getElementById('search-results');

    // เมื่อมีการพิมพ์ใน search bar
    searchInput.addEventListener('input', function(event) {
        const query = searchInput.value.trim();

        if (query.length >= 3) {  // ถ้า query ยาวพอให้ทำการค้นหา
            searchPosts(query);  // ค้นหาจาก query
        } else {
            // หากไม่มีการพิมพ์ใน search bar ให้ดึงโพสต์ทั้งหมด
            fetchAllPosts();
        }
    });

    // ฟังก์ชันที่ใช้ดึงโพสต์ทั้งหมดจากเซิร์ฟเวอร์
    function fetchAllPosts() {
        fetch('/main/user')  // เปลี่ยนให้ตรงกับ endpoint ที่ดึงโพสต์ทั้งหมด
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error("Error during fetch all posts:", data.error);
                } else {
                    displaySearchResults(data); // แสดงโพสต์ทั้งหมด
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }

    // ฟังก์ชันค้นหาโพสต์
    function searchPosts(query) {
        fetch(`/search?query=${encodeURIComponent(query)}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error("Error during search:", data.error);
                } else {
                    displaySearchResults(data); // แสดงผลลัพธ์การค้นหา
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }

    // ฟังก์ชันแสดงผลการค้นหาบนหน้าเว็บ
    function displaySearchResults(results) {
        if (results.length === 0) {
            searchResultsContainer.innerHTML = '<p>No results found.</p>';
        } else {
            let html = '<div id="posts-container"><div class="containpost">';
            results.forEach(post => {
                html += `
                    <div class="recipe-card">
                        <a href="/main/user/post/${post._id}">
                            <img src="/uploads/${post.post_picture.split('\\').pop()}" alt="${post.post_topic}" class="recipe-image" />
                        </a>
                        <div class="recipe-details">
                            <p><strong>Created by:</strong> ${post.createdBy ? post.createdBy.profile_name : 'Unknown'}</p>
                            <a href="/main/user/post/${post._id}">
                                <h3 class="recipe-title">${post.post_topic}</h3>
                            </a>
                            <div class="recipe-rating">
                                <label for="rating"><strong>คะแนนเฉลี่ย:</strong> ${post.avg_score.toFixed(2)}</label>
                                <span class="rating-value">จาก ${post.ratings.length} รีวิว</span>
                            </div>
                        </div>
                    </div>
                `;
            });
            html += '</div></div>';
            searchResultsContainer.innerHTML = html;
        }
    }

    // เรียกใช้ fetchAllPosts เมื่อโหลดหน้าแรกเพื่อดึงโพสต์ทั้งหมด
    fetchAllPosts();  // นี้จะช่วยให้แสดงโพสต์ทั้งหมดเมื่อหน้าเว็บโหลด
});



document.addEventListener("DOMContentLoaded", () => {
    const typeFoodItems = document.querySelectorAll('.typefood');  // เลือกทุก ๆ ประเภทอาหาร

    typeFoodItems.forEach(item => {
        item.addEventListener('click', function() {
            const type = item.getAttribute('data-type');  // ดึงประเภทอาหารที่ผู้ใช้เลือก
            searchPostsByType(type);  // เรียกใช้ฟังก์ชันค้นหาโพสต์ตามประเภท
        });
    });

    // ฟังก์ชันค้นหาโพสต์จากประเภทอาหาร
    function searchPostsByType(type) {
        fetch(`/search-by-type?type=${encodeURIComponent(type)}`)
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.error("Error during search:", data.error);
                } else {
                    displaySearchResults(data); // แสดงผลลัพธ์การค้นหา
                }
            })
            .catch(error => {
                console.error("Error:", error);
            });
    }

    // ฟังก์ชันแสดงผลการค้นหาบนหน้าเว็บ
    function displaySearchResults(results) {
        const searchResultsContainer = document.getElementById('search-results');  // ตำแหน่งที่จะแสดงผลลัพธ์
        if (results.length === 0) {
            searchResultsContainer.innerHTML = '<p>No results found.</p>';
        } else {
            let html = '<div id="posts-container"><div class="containpost">';
            results.forEach(post => {
                html += `
                    <div class="recipe-card">
                        <a href="/main/user/post/${post._id}">
                            <img src="/uploads/${post.post_picture.split('\\').pop()}" alt="${post.post_topic}" class="recipe-image" />
                        </a>
                        <div class="recipe-details">
                            <p><strong>Created by:</strong> ${post.createdBy ? post.createdBy.profile_name : 'Unknown'}</p>
                            <a href="/main/user/post/${post._id}">
                                <h3 class="recipe-title">${post.post_topic}</h3>
                            </a>
                            <div class="recipe-rating">
                                <label for="rating"><strong>คะแนนเฉลี่ย:</strong> ${post.avg_score.toFixed(2)}</label>
                                <span class="rating-value">จาก ${post.ratings.length} รีวิว</span>
                            </div>
                        </div>
                    </div>
                `;
            });
            html += '</div></div>';
            searchResultsContainer.innerHTML = html;
        }
    }
});



    </script>
</body>
</html>